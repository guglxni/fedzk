name: Publish to TestPyPI

on:
  push:
    tags:
      - 'v*.*.*'  # Run when version tags are pushed (v0.1.0, v1.2.3, etc.)
  workflow_dispatch:  # Allow manual triggers

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          
      - name: Run tests
        run: pytest
  
  build-and-publish:
    name: Build and Publish to TestPyPI
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build package
        run: python -m build
        
      - name: Check package
        run: twine check dist/*
        
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          
      - name: Wait for package to become available
        run: |
          echo "Waiting for package to become available on TestPyPI..."
          sleep 60
          
      - name: Test installation
        run: |
          python -m venv test_env
          source test_env/bin/activate
          VERSION=$(grep -E '^version\s*=\s*"[0-9]+\.[0-9]+\.[0-9]+"' pyproject.toml | grep -o '".*"' | tr -d '"')
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple fedzk==${VERSION}
          fedzk --help
          deactivate
          rm -rf test_env
          
  deploy-to-pypi:
    name: Deploy to PyPI (Production)
    needs: build-and-publish
    if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build package
        run: python -m build
        
      - name: Check package
        run: twine check dist/*
        
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true 