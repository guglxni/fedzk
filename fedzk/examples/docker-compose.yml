version: '3.8'

services:
  mpc-server:
    build:
      context: ..
      dockerfile: examples/Dockerfile
    environment:
      - MPC_API_KEYS=key1,key2,key3
      - PYTHONPATH=/app
    ports:
      - "8001:8001"
    command: python -m fedzk.cli mpc server --host 0.0.0.0 --port 8001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  coordinator:
    build:
      context: ..
      dockerfile: examples/Dockerfile
    environment:
      - PYTHONPATH=/app
      - MPC_SERVER_URL=http://mpc-server:8001
      - MPC_API_KEY=key1
    ports:
      - "8000:8000"
    command: python -m fedzk.cli coordinator server --host 0.0.0.0 --port 8000 --mpc-server http://mpc-server:8001 --api-key key1
    depends_on:
      mpc-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional monitoring service
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - coordinator
      - mpc-server

  # Optional visualization service
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

networks:
  default:
    driver: bridge 