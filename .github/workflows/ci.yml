name: FEDzk CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  compile-circuits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install circom and snarkjs
        run: |
          # SnarkJS from npm
          npm install -g snarkjs@0.6.11
          # Download Circom v2.1.5 binary (npm package deprecated)
          CIRCOM_URL=https://github.com/iden3/circom/releases/download/v2.1.5/circom-linux-amd64
          curl -L "$CIRCOM_URL" -o /usr/local/bin/circom
          chmod +x /usr/local/bin/circom

      - name: Compile Circom circuits
        run: |
          echo "Compiling circuits..."
          BUILD_DIR="src/fedzk/zk/circuits/build"
          mkdir -p $BUILD_DIR
          for c_file in $(git ls-files src/fedzk/zk/circuits/*.circom); do
            echo "Compiling $c_file..."
            circom "$c_file" --r1cs --wasm --sym --output "$BUILD_DIR"
            if [ $? -ne 0 ]; then
              echo "Error compiling $c_file"
              exit 1
            fi
          done
          echo "Circuit compilation complete."

      - name: Cache Circom build artifacts
        uses: actions/cache@v4
        with:
          path: src/fedzk/zk/circuits/build
          key: ${{ runner.os }}-circom-build-${{ hashFiles('src/fedzk/zk/circuits/**/*.circom') }}
          restore-keys: |
            ${{ runner.os }}-circom-build-

  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch numpy click pytest pytest-cov fastapi httpx uvicorn starlette pydantic
        pip install -e .
    
    - name: Check project structure
      run: |
        echo "Verifying project structure..."
        ls -la src/fedzk/
        if [ ! -d "src/fedzk" ]; then
          echo "❌ ERROR: src/fedzk/ directory not found"
          exit 1
        fi
        echo "✅ Project structure verified"
        
    - name: Run tests with coverage
      run: |
        pytest -v --cov=src/fedzk --cov-report=xml
        
    - name: Test client functionality
      run: |
        mkdir -p client_output
        # Create test output files
        echo "Example training output" > client_output/training_results.txt
        echo "Example proof output" > client_output/proof_results.txt
        # Run client commands
        python -m fedzk client train
        python -m fedzk client prove
        
    - name: Test benchmark CLI help
      run: |
        python -m fedzk benchmark run --help

    - name: Upload coverage to Codecov
      if: github.repository == 'guglxni/fedzk'
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN || github.token }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-output
        path: client_output/
        retention-days: 1