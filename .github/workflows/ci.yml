name: FedZK CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  compile-circuits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install circom and snarkjs
        run: |
          npm install -g circom@2.1.9
          npm install -g snarkjs@0.6.11

      - name: Compile Circom circuits
        run: |
          echo "Compiling circuits..."
          BUILD_DIR="src/fedzk/zk/circuits/build"
          mkdir -p $BUILD_DIR
          for c_file in $(git ls-files src/fedzk/zk/circuits/*.circom); do
            echo "Compiling $c_file..."
            circom "$c_file" --r1cs --wasm --sym --output "$BUILD_DIR"
            if [ $? -ne 0 ]; then
              echo "Error compiling $c_file"
              exit 1
            fi
          done
          echo "Circuit compilation complete."

      - name: Cache Circom build artifacts
        uses: actions/cache@v4
        with:
          path: src/fedzk/zk/circuits/build
          key: ${{ runner.os }}-circom-build-${{ hashFiles('src/fedzk/zk/circuits/**/*.circom') }}
          restore-keys: |
            ${{ runner.os }}-circom-build-

  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch numpy click
        pip install -e .
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Check for deprecated structure usage
      run: |
        echo "Checking for imports from deprecated fedzk/ directory..."
        if grep -r "from fedzk.prover" --include="*.py" fedzk/ || \
           grep -r "from fedzk.client" --include="*.py" fedzk/ || \
           grep -r "from fedzk.coordinator" --include="*.py" fedzk/ || \
           grep -r "from fedzk.mpc" --include="*.py" fedzk/; then
          echo "⚠️ WARNING: Found imports using deprecated path structure."
          echo "Please update code to use src/fedzk/ directory structure."
        fi
    
    - name: Run module structure migration
      run: |
        # Check if we need to migrate any modules
        echo "Checking for modules needing migration..."
        
        # Create src structure if needed
        mkdir -p src/fedzk/prover src/fedzk/mpc src/fedzk/client src/fedzk/coordinator
        
        # Only copy missing files, don't overwrite existing ones in src/
        if [ -d "fedzk/prover" ] && [ "$(ls -A fedzk/prover 2>/dev/null)" ]; then
          echo "Migrating prover modules not yet in src/"
          for file in fedzk/prover/*; do
            basename=$(basename "$file")
            if [ ! -f "src/fedzk/prover/$basename" ]; then
              cp -v "$file" "src/fedzk/prover/$basename"
            fi
          done
        fi
        
        if [ -d "fedzk/mpc" ] && [ "$(ls -A fedzk/mpc 2>/dev/null)" ]; then
          echo "Migrating mpc modules not yet in src/"
          for file in fedzk/mpc/*; do
            basename=$(basename "$file")
            if [ ! -f "src/fedzk/mpc/$basename" ]; then
              cp -v "$file" "src/fedzk/mpc/$basename"
            fi
          done
        fi
        
        if [ -d "fedzk/client" ] && [ "$(ls -A fedzk/client 2>/dev/null)" ]; then
          echo "Migrating client modules not yet in src/"
          for file in fedzk/client/*; do
            basename=$(basename "$file")
            if [ ! -f "src/fedzk/client/$basename" ]; then
              cp -v "$file" "src/fedzk/client/$basename"
            fi
          done
        fi
        
        if [ -d "fedzk/coordinator" ] && [ "$(ls -A fedzk/coordinator 2>/dev/null)" ]; then
          echo "Migrating coordinator modules not yet in src/"
          for file in fedzk/coordinator/*; do
            basename=$(basename "$file")
            if [ ! -f "src/fedzk/coordinator/$basename" ]; then
              cp -v "$file" "src/fedzk/coordinator/$basename"
            fi
          done
        fi
        
        echo "Migration check complete."
        
    - name: Run tests with coverage
      run: |
        pytest -v --cov=fedzk --cov-report=xml
        
    - name: Test client functionality
      run: |
        mkdir -p client_output
        # Create test output files
        echo "Example training output" > client_output/training_results.txt
        echo "Example proof output" > client_output/proof_results.txt
        # Run client commands
        python -m fedzk client train
        python -m fedzk client prove
        
    - name: Test benchmark CLI help
      run: |
        python -m fedzk benchmark run --help

    - name: Upload coverage to Codecov
      if: github.repository == 'guglxni/fedzk'
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN || github.token }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-output
        path: client_output/
        retention-days: 1