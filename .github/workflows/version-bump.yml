name: Version Bump and Changelog Update

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      pre_release_tag:
        description: 'Pre-release tag (leave empty for stable release)'
        required: false
        default: 'none'
        type: choice
        options:
          - none
          - dev
          - alpha
          - beta
          - rc

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Bump version (stable)
        if: ${{ inputs.pre_release_tag == 'none' }}
        run: |
          bump2version ${{ inputs.bump_type }}
          git push --tags origin main

      - name: Bump version (pre-release)
        if: ${{ inputs.pre_release_tag != 'none' }}
        run: |
          # If we're transitioning from a release to a pre-release, first bump the version
          if [[ $(grep "current_version" .bumpversion.cfg | awk '{print $3}' | grep -c "-") -eq 0 ]]; then
            bump2version ${{ inputs.bump_type }}
          fi
          # Then apply the pre-release tag
          bump2version --new-version $(bump2version --list ${{ inputs.bump_type }} --dry-run | grep new_version | sed -r s,"^.*=",,)"-${{ inputs.pre_release_tag }}1" ${{ inputs.bump_type }} --allow-dirty
          git push --tags origin main

      - name: Generate changelog
        uses: github-changelog-generator/github-changelog-generator-action@v1.3.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: CHANGELOG.md
          stripGeneratorNotice: true
          unreleasedLabel: "## [Unreleased]"
          breakingLabel: "### BREAKING CHANGES"
          enhancementLabel: "### Added"
          bugsLabel: "### Fixed"
          securityLabel: "### Security"
          issuesWoLabelsLabel: "### Other"
          prWoLabelsLabel: "### Changes"
          addSections: '{"documentation":{"prefix":"### Documentation","labels":["documentation"]},"tests":{"prefix":"### Testing","labels":["tests"]},"dependencies":{"prefix":"### Dependencies","labels":["dependencies"]}}'
          excludeLabels: "duplicate,question,invalid,wontfix,skip-changelog"
          pullRequests: true
          prWoLabels: true
          issues: false
        
      - name: Commit changelog
        run: |
          if [[ $(git status --porcelain | grep CHANGELOG.md) ]]; then
            git add CHANGELOG.md
            git commit -m "Update CHANGELOG.md for v$(grep "current_version" .bumpversion.cfg | awk '{print $3}')"
            git push origin main
          fi 